"use client";

import { useState } from "react";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Check, Star, Cloud, Server, Shield, Zap, Globe, Headphones, Database, Cpu, Activity, Network, Settings } from "lucide-react";
import { useRouter } from "next/navigation";

export default function VPSPage() {
  const router = useRouter();
  const [selectedLocation, setSelectedLocation] = useState("vietnam");
  const [billingCycle, setBillingCycle] = useState("monthly");

  const vpsPlans = [
    {
      name: "VPS Starter",
      price: { monthly: 150000, yearly: 1500000 },
      popular: false,
      specs: {
        cpu: "1 Core",
        ram: "1GB RAM",
        storage: "25GB SSD",
        bandwidth: "1TB Bandwidth",
        ip: "1 IPv4"
      },
      features: [
        "Intel Xeon CPU",
        "SSD NVMe Storage",
        "1Gbps Network Port",
        "Full Root Access",
        "KVM / Virtualizor",
        "Free Reinstall",
        "Basic DDoS Protection",
        "99.9% Uptime SLA"
      ],
      useCases: ["Website nh·ªè", "·ª®ng d·ª•ng test", "Personal projects"]
    },
    {
      name: "VPS Business",
      price: { monthly: 350000, yearly: 3500000 },
      popular: true,
      specs: {
        cpu: "2 Cores",
        ram: "4GB RAM",
        storage: "60GB SSD",
        bandwidth: "2TB Bandwidth",
        ip: "1 IPv4"
      },
      features: [
        "Intel Xeon CPU",
        "SSD NVMe Storage",
        "1Gbps Network Port",
        "Full Root Access",
        "KVM / Virtualizor",
        "Free Reinstall",
        "Advanced DDoS Protection",
        "99.9% Uptime SLA",
        "Free Backup",
        "Snapshot Feature"
      ],
      useCases: ["Business website", "E-commerce", "CRM system"]
    },
    {
      name: "VPS Professional",
      price: { monthly: 700000, yearly: 7000000 },
      popular: false,
      specs: {
        cpu: "4 Cores",
        ram: "8GB RAM",
        storage: "120GB SSD",
        bandwidth: "3TB Bandwidth",
        ip: "1 IPv4"
      },
      features: [
        "Intel Xeon CPU",
        "SSD NVMe Storage",
        "1Gbps Network Port",
        "Full Root Access",
        "KVM / Virtualizor",
        "Free Reinstall",
        "Premium DDoS Protection",
        "99.95% Uptime SLA",
        "Daily Backup",
        "Snapshot Feature",
        "Load Balancer",
        "CDN Integration"
      ],
      useCases: ["High traffic sites", "SaaS applications", "Development servers"]
    },
    {
      name: "VPS Enterprise",
      price: { monthly: 1500000, yearly: 15000000 },
      popular: false,
      specs: {
        cpu: "8 Cores",
        ram: "16GB RAM",
        storage: "240GB SSD",
        bandwidth: "5TB Bandwidth",
        ip: "1 IPv4 + 1 IPv6"
      },
      features: [
        "Intel Xeon CPU",
        "SSD NVMe Storage",
        "1Gbps Network Port",
        "Full Root Access",
        "KVM / Virtualizor",
        "Free Reinstall",
        "Enterprise DDoS Protection",
        "99.99% Uptime SLA",
        "Real-time Backup",
        "Unlimited Snapshots",
        "Load Balancer",
        "CDN Integration",
        "Dedicated Support",
        "Custom OS Installation"
      ],
      useCases: ["Enterprise applications", "Large databases", "High-performance computing"]
    }
  ];

  const locations = [
    { id: "vietnam", name: "Vi·ªát Nam", flag: "üáªüá≥", ping: "5ms" },
    { id: "singapore", name: "Singapore", flag: "üá∏üá¨", ping: "25ms" },
    { id: "japan", name: "Japan", flag: "üáØüáµ", ping: "45ms" },
    { id: "usa", name: "USA", flag: "üá∫üá∏", ping: "150ms" }
  ];

  const operatingSystems = [
    { name: "Ubuntu", versions: ["20.04", "22.04", "23.10"], icon: "üêß" },
    { name: "CentOS", versions: ["7", "8", "9"], icon: "üî¥" },
    { name: "Debian", versions: ["10", "11", "12"], icon: "üåÄ" },
    { name: "Windows", versions: ["2019", "2022"], icon: "ü™ü" },
    { name: "Fedora", versions: ["38", "39"], icon: "üé©" }
  ];

  const vpsFeatures = [
    {
      icon: Cloud,
      title: "Cloud Infrastructure",
      description: "H·∫° t·∫ßng cloud hi·ªán ƒë·∫°i v·ªõi kh·∫£ nƒÉng m·ªü r·ªông linh ho·∫°t, t·ª± ƒë·ªông h√≥a v√† gi√°m s√°t 24/7"
    },
    {
      icon: Shield,
      title: "Security First",
      description: "B·∫£o m·∫≠t ƒëa l·ªõp v·ªõi firewall, DDoS protection, regular security updates v√† monitoring"
    },
    {
      icon: Zap,
      title: "High Performance",
      description: "SSD NVMe si√™u t·ªëc, CPU th·∫ø h·ªá m·ªõi, RAM DDR4 ƒë·∫£m b·∫£o hi·ªáu su·∫•t t·ªëi ∆∞u"
    },
    {
      icon: Settings,
      title: "Full Control",
      description: "Full root access, control panel, API access, kh·∫£ nƒÉng t√πy bi·∫øn ho√†n to√†n"
    },
    {
      icon: Activity,
      title: "99.9% Uptime",
      description: "Cam k·∫øt uptime 99.9% v·ªõi h·ªá th·ªëng backup v√† disaster recovery chuy√™n nghi·ªáp"
    },
    {
      icon: Headphones,
      title: "24/7 Support",
      description: "H·ªó tr·ª£ k·ªπ thu·∫≠t 24/7 b·ªüi ƒë·ªôi ng≈© chuy√™n gia c√≥ kinh nghi·ªám"
    }
  ];

  const getPrice = (plan: any) => {
    return billingCycle === "monthly" ? plan.price.monthly : plan.price.yearly;
  };

  const getPeriodText = () => {
    return billingCycle === "monthly" ? "/th√°ng" : "/nƒÉm";
  };

  const getSavings = (plan: any) => {
    const monthlyTotal = plan.price.monthly * 12;
    const savings = monthlyTotal - plan.price.yearly;
    return Math.round((savings / monthlyTotal) * 100);
  };

  const handleOrderNow = (plan: any) => {
    const params = new URLSearchParams({
      'dich-vu': 'vps',
      'id': plan.name.toLowerCase().replace(/\s+/g, '-')
    })
    router.push(`/thanh-toan?${params.toString()}`)
  };

  return (
    <div className="min-h-screen bg-background">
      {/* Hero Section */}
      <section className="relative overflow-hidden bg-gradient-to-br from-primary/10 via-background to-background py-20 lg:py-32">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <Badge className="mb-4">Cloud VPS Cao C·∫•p</Badge>
            <h1 className="text-4xl lg:text-6xl font-bold bg-gradient-to-r from-primary to-primary/70 bg-clip-text text-transparent mb-6">
              Cloud VPS T·ªëc ƒê·ªô Cao<br />
              <span className="text-foreground">M·ªü R·ªông Linh Ho·∫°t</span>
            </h1>
            <p className="text-lg lg:text-xl text-muted-foreground max-w-3xl mx-auto mb-8">
              D·ªãch v·ª• VPS ƒë√°m m√¢y v·ªõi c√¥ng ngh·ªá ·∫£o h√≥a KVM, SSD NVMe si√™u t·ªëc, 
              b·∫£o m·∫≠t cao v√† kh·∫£ nƒÉng m·ªü r·ªông t·ª©c th√¨. Ph√π h·ª£p cho m·ªçi nhu c·∫ßu t·ª´ c√° nh√¢n ƒë·∫øn doanh nghi·ªáp.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" className="bg-primary hover:bg-primary/90 text-primary-foreground">
                B·∫Øt D·∫ßu Ngay
              </Button>
              <Button size="lg" variant="outline">
                D√πng Th·ª≠ Mi·ªÖn Ph√≠ 7 Ng√†y
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 lg:py-32">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-3xl lg:text-5xl font-bold mb-4">
              T·∫°i Sao Ch·ªçn VPS C·ªßa Ch√∫ng T√¥i
            </h2>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              C√¥ng ngh·ªá VPS ti√™n ti·∫øn nh·∫•t v·ªõi hi·ªáu su·∫•t v∆∞·ª£t tr·ªôi v√† ƒë·ªô tin c·∫≠y cao
            </p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {vpsFeatures.map((feature, index) => (
              <Card key={index} className="border-0 shadow-lg hover:shadow-xl transition-all duration-300 group">
                <CardHeader>
                  <div className="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4 group-hover:bg-primary/20 transition-colors">
                    <feature.icon className="h-6 w-6 text-primary" />
                  </div>
                  <CardTitle className="text-xl">{feature.title}</CardTitle>
                  <CardDescription className="text-base">
                    {feature.description}
                  </CardDescription>
                </CardHeader>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Server Locations */}
      <section className="py-20 lg:py-32 bg-muted/50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-3xl lg:text-5xl font-bold mb-4">
              ƒê·ªãa ƒêi·ªÉm Server To√†n C·∫ßu
            </h2>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              Ch·ªçn ƒë·ªãa ƒëi·ªÉm server g·∫ßn nh·∫•t v·ªõi kh√°ch h√†ng c·ªßa b·∫°n ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c t·ªëc ƒë·ªô truy c·∫≠p t·ªëi ∆∞u
            </p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-4xl mx-auto">
            {locations.map((location) => (
              <Card 
                key={location.id}
                className={`border-0 shadow-lg cursor-pointer transition-all duration-300 ${
                  selectedLocation === location.id ? 'ring-2 ring-primary' : 'hover:shadow-xl'
                }`}
                onClick={() => setSelectedLocation(location.id)}
              >
                <CardContent className="p-6 text-center">
                  <div className="text-4xl mb-2">{location.flag}</div>
                  <h3 className="font-semibold mb-1">{location.name}</h3>
                  <p className="text-sm text-muted-foreground">Ping: {location.ping}</p>
                  {selectedLocation === location.id && (
                    <Badge className="mt-2">ƒê√£ ch·ªçn</Badge>
                  )}
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Pricing Section */}
      <section className="py-20 lg:py-32">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-3xl lg:text-5xl font-bold mb-4">
              B·∫£ng Gi√° Cloud VPS
            </h2>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto mb-8">
              Ch·ªçn g√≥i VPS ph√π h·ª£p v·ªõi nhu c·∫ßu c·ªßa b·∫°n
            </p>
            
            {/* Billing Cycle Toggle */}
            <div className="inline-flex items-center bg-background rounded-lg p-1 border">
              <Button
                variant={billingCycle === "monthly" ? "default" : "ghost"}
                size="sm"
                onClick={() => setBillingCycle("monthly")}
                className="text-sm"
              >
                Tr·∫£ theo th√°ng
              </Button>
              <Button
                variant={billingCycle === "yearly" ? "default" : "ghost"}
                size="sm"
                onClick={() => setBillingCycle("yearly")}
                className="text-sm"
              >
                Tr·∫£ theo nƒÉm{" "}
                <Badge className="ml-2 bg-green-500 text-white">Ti·∫øt ki·ªám 20%</Badge>
              </Button>
            </div>
          </div>

          <div className="grid lg:grid-cols-4 gap-8 max-w-7xl mx-auto">
            {vpsPlans.map((plan, index) => (
              <Card 
                key={index} 
                className={`border-0 shadow-lg hover:shadow-xl transition-all duration-300 relative ${
                  plan.popular ? 'border-2 border-primary scale-105' : ''
                }`}
              >
                {plan.popular && (
                  <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                    <Badge className="bg-primary text-primary-foreground px-4 py-2">
                      <Star className="w-4 h-4 mr-1" />
                      Ph·ªï Bi·∫øn Nh·∫•t
                    </Badge>
                  </div>
                )}
                
                <CardHeader className="text-center pb-4">
                  <CardTitle className="text-2xl mb-2">{plan.name}</CardTitle>
                  
                  {/* Specs */}
                  <div className="space-y-2 mb-4">
                    <div className="flex justify-between text-sm">
                      <span className="text-muted-foreground">CPU:</span>
                      <span className="font-medium">{plan.specs.cpu}</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-muted-foreground">RAM:</span>
                      <span className="font-medium">{plan.specs.ram}</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-muted-foreground">Storage:</span>
                      <span className="font-medium">{plan.specs.storage}</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-muted-foreground">Bandwidth:</span>
                      <span className="font-medium">{plan.specs.bandwidth}</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-muted-foreground">IP:</span>
                      <span className="font-medium">{plan.specs.ip}</span>
                    </div>
                  </div>
                  
                  <div className="mb-4">
                    <div className="flex items-baseline justify-center">
                      <span className="text-4xl font-bold">
                        {getPrice(plan).toLocaleString('vi-VN')}‚Ç´
                      </span>
                      <span className="text-muted-foreground ml-1">
                        {getPeriodText()}
                      </span>
                    </div>
                    {billingCycle === "yearly" && (
                      <div className="text-sm text-green-600 mt-1">
                        Ti·∫øt ki·ªám {getSavings(plan)}%
                      </div>
                    )}
                  </div>
                  
                  <div className="space-y-1">
                    {plan.useCases.map((useCase, idx) => (
                      <div key={idx} className="text-xs text-muted-foreground">
                        {useCase}
                      </div>
                    ))}
                  </div>
                </CardHeader>
                
                <CardContent className="space-y-4">
                  <div className="space-y-2">
                    {plan.features.map((feature, idx) => (
                      <div key={idx} className="flex items-start gap-2">
                        <Check className="h-3 w-3 text-primary mt-0.5 flex-shrink-0" />
                        <span className="text-xs">{feature}</span>
                      </div>
                    ))}
                  </div>
                  
                  <Button 
                    className={`w-full mt-4 ${
                      plan.popular 
                        ? 'bg-primary hover:bg-primary/90 text-primary-foreground' 
                        : 'variant-outline'
                    }`}
                    variant={plan.popular ? "default" : "outline"}
                    size="sm"
                    onClick={() => handleOrderNow(plan)}
                  >
                    ƒê·∫∑t Mua Ngay
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Operating Systems */}
      <section className="py-20 lg:py-32 bg-muted/50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-3xl lg:text-5xl font-bold mb-4">
              H·ªá ƒêi·ªÅu H√†nh H·ªó Tr·ª£
            </h2>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              Ch√∫ng t√¥i h·ªó tr·ª£ nhi·ªÅu h·ªá ƒëi·ªÅu h√†nh ph·ªï bi·∫øn nh·∫•t, s·∫µn s√†ng c√†i ƒë·∫∑t ch·ªâ v·ªõi 1 click
            </p>
          </div>
          
          <div className="grid md:grid-cols-3 lg:grid-cols-5 gap-6 max-w-5xl mx-auto">
            {operatingSystems.map((os, index) => (
              <Card key={index} className="border-0 shadow-lg hover:shadow-xl transition-all duration-300 text-center">
                <CardContent className="p-6">
                  <div className="text-4xl mb-3">{os.icon}</div>
                  <h3 className="font-semibold mb-2">{os.name}</h3>
                  <div className="space-y-1">
                    {os.versions.map((version, idx) => (
                      <div key={idx} className="text-sm text-muted-foreground">
                        {version}
                      </div>
                    ))}
                  </div>
                  <Button variant="outline" size="sm" className="w-full mt-4">
                    Ch·ªçn {os.name}
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Technical Specifications */}
      <section className="py-20 lg:py-32">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-3xl lg:text-5xl font-bold mb-4">
              Th√¥ng S·ªë K·ªπ Thu·∫≠t
            </h2>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              Chi ti·∫øt c·∫•u h√¨nh h·ªá th·ªëng VPS c·ªßa ch√∫ng t√¥i
            </p>
          </div>

          <div className="grid lg:grid-cols-2 gap-12 max-w-6xl mx-auto">
            <Card className="border-0 shadow-lg">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Cpu className="h-5 w-5 text-primary" />
                  C·∫•u H√¨nh Node
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <div className="text-sm text-muted-foreground">Processor</div>
                    <div className="font-semibold">Intel Xeon Silver 4210R</div>
                  </div>
                  <div>
                    <div className="text-sm text-muted-foreground">Cores/Node</div>
                    <div className="font-semibold">40 Cores / 80 Threads</div>
                  </div>
                  <div>
                    <div className="text-sm text-muted-foreground">RAM/Node</div>
                    <div className="font-semibold">256GB DDR4 ECC</div>
                  </div>
                  <div>
                    <div className="text-sm text-muted-foreground">Storage/Node</div>
                    <div className="font-semibold">4TB SSD NVMe</div>
                  </div>
                  <div>
                    <div className="text-sm text-muted-foreground">Network</div>
                    <div className="font-semibold">10Gbps Uplink</div>
                  </div>
                  <div>
                    <div className="text-sm text-muted-foreground">Virtualization</div>
                    <div className="font-semibold">KVM / Linux VPS</div>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="border-0 shadow-lg">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Network className="h-5 w-5 text-primary" />
                  M·∫°ng & B·∫£o M·∫≠t
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-3">
                  <div>
                    <div className="text-sm text-muted-foreground">Network Provider</div>
                    <div className="font-semibold">Viettel, VNPT, FPT</div>
                  </div>
                  <div>
                    <div className="text-sm text-muted-foreground">DDoS Protection</div>
                    <div className="font-semibold">Arbor Networks, 500Gbps+</div>
                  </div>
                  <div>
                    <div className="text-sm text-muted-foreground">Firewall</div>
                    <div className="font-semibold">Cisco ASA, Fortinet</div>
                  </div>
                  <div>
                    <div className="text-sm text-muted-foreground">Monitoring</div>
                    <div className="font-semibold">Zabbix, Prometheus</div>
                  </div>
                  <div>
                    <div className="text-sm text-muted-foreground">Backup System</div>
                    <div className="font-semibold">Veeam, R1Soft</div>
                  </div>
                  <div>
                    <div className="text-sm text-muted-foreground">Control Panel</div>
                    <div className="font-semibold">Virtualizor, SolusVM</div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 lg:py-32 bg-primary text-primary-foreground">
        <div className="container mx-auto px-4">
          <div className="text-center max-w-3xl mx-auto">
            <h2 className="text-3xl lg:text-5xl font-bold mb-6">
              S·∫µn S√†ng N√¢ng C·∫•p H·∫° T·∫ßng?
            </h2>
            <p className="text-lg mb-8 opacity-90">
              H∆°n 5,000 VPS ƒëang ho·∫°t ƒë·ªông tr√™n h·ªá th·ªëng c·ªßa ch√∫ng t√¥i. 
              Tham gia ngay h√¥m nay v√† tr·∫£i nghi·ªám s·ª©c m·∫°nh c·ªßa Cloud VPS!
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" variant="secondary" className="bg-background text-foreground hover:bg-background/90">
                ƒê·∫∑t VPS Ngay
              </Button>
              <Button size="lg" variant="outline" className="border-primary-foreground text-primary-foreground hover:bg-primary-foreground hover:text-primary">
                Li√™n H·ªá T∆∞ V·∫•n
              </Button>
            </div>
          </div>
        </div>
      </section>

    </div>
  );
}